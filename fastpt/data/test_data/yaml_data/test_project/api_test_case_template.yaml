config:
  allure:
    epic: demo接口
    feature: demo模块
    story: yaml数据测试输出
  request:
    env: dev.env
    headers:
    timeout: 10
    verify: False
    redirects: True
    proxies:
      requests:
        http:
        https:
  #      httpx:
  #        http://:
  #        https://:
  module: test

test_steps:
  - name: 查询
    case_id: event_query_001
    description: 测试直接请求
    is_run:
    request:
      method: get
      url: /posts/1
      params:
      headers:
      data_type:
      data:
      files:
    setup:
      #      sql:
      #        - key:
      #          set_type:
      #          sql:
      #          jsonpath:
      #        - select * from xxx where xxx=xxx
      hooks:
      wait_time: 0
    teardown:
      sql:
      hooks:
      extract:
        - key: test
          set_type: cache
          jsonpath: $.url
      assert:
        - check: 检查响应状态码
          value: 200
          type: eq
          jsonpath: $.status_code
      wait_time: 0

  - name: 断言
    case_id: event_query_002
    description: 高级断言
    is_run:
    request:
      method: get
      url: /comments
      params:
        postId: 1
      headers:
      data_type:
      data:
      files:
    setup:
      wait_time: 0
    teardown:
      extract:
        - key: test
          set_type: env
          jsonpath: $.url
      assert:
        - assert 200 == pm.response.get('status_code')
        - assert 'postId' not in str(pm.response.get('content')), '没有返回content'

  - name: hooks
    case_id: event_create_003
    description: 测试hooks
    is_run:
    request:
      method: post
      url: /posts
      params:
      headers:
        Content-type: application/json; charset=UTF-8
      data_type: json
      data:
        title: foo
        body: this is a test
        userId: 1
      files:
    setup:
      hooks:
        - ${current_time()}
    teardown:
      hooks:
        - ${random_phone()}
      extract:
        - key: test
          set_type: global
          jsonpath: $.url
      assert: assert 200 == pm.response.get('status_code')
