{"name": "test_004[module: test, case_id: event_create_003, case_desc: 测试hooks, is_run: None, method: post, env: None, url: https://jsonplaceholder.typicode.com/posts, params: None, headers: None,data_type: json,data: {'title': 'foo', 'body': '${random_phone()}', 'userId': 1},files: None,sql: None,assert: None,]", "status": "failed", "statusDetails": {"message": "AssertionError: 返回实际结果是->: 500\nassert 500 == 200\n  +500\n  -200", "trace": "self = <fastpt.testcase.test_project.test_api.TestDemo object at 0x00000204E21D41C0>\ndata = {'assert': None, 'case_desc': '测试hooks', 'case_id': 'event_create_003', 'data': {'body': '${random_phone()}', 'title': 'foo', 'userId': 1}, ...}\n\n    @allure.story(\"yaml数据测试输出\")\n    @pytest.mark.test_api\n    @pytest.mark.parametrize('data', yaml_data, ids=yaml_ids)\n    def test_004(self, data):\n        \"\"\" 测试004 \"\"\"\n        rp = send_request.send_request(data)\n        rs = rp['status_code']\n        if rs == 200:\n            status = 'PASS'\n            write_yaml_report(data=[{'case': data['case_id'], 'result': status}], status=status)\n        else:\n            status = 'FAIL'\n            write_yaml_report(data=[{'case': data['case_id'], 'result': status}], status=status)\n>       assert rs == 200, \"返回实际结果是->: %s\" % rs  # 暂时的\nE       AssertionError: 返回实际结果是->: 500\nE       assert 500 == 200\nE         +500\nE         -200\n\ntestcase\\test_project\\test_api.py:72: AssertionError"}, "description": " 测试004 ", "attachments": [{"name": "stderr", "source": "8c170d35-173e-4366-b28e-d0ee8d11f514-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'module': 'test', 'case_id': 'event_create_003', 'case_desc': '测试hooks', 'is_run': None, 'method': 'post', 'env': None, 'url': 'https://jsonplaceholder.typicode.com/posts', 'params': None, 'headers': None, 'data_type': 'json', 'data': {'title': 'foo', 'body': '${random_phone()}', 'userId': 1}, 'files': None, 'sql': None, 'assert': None}"}], "start": 1658741898481, "stop": 1658741899278, "uuid": "355437b8-7200-44e3-b5f3-75af215c524c", "historyId": "81baaa3c5a30c771cbaf1666746d6a50", "testCaseId": "1624834a7fba0b30959ec9965c07f77f", "fullName": "testcase.test_project.test_api.TestDemo#test_004", "labels": [{"name": "epic", "value": "demo接口"}, {"name": "story", "value": "yaml数据测试输出"}, {"name": "feature", "value": "demo模块"}, {"name": "tag", "value": "test_api"}, {"name": "parentSuite", "value": "testcase.test_project"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestDemo"}, {"name": "host", "value": "wjh"}, {"name": "thread", "value": "14804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_project.test_api"}]}